@tailwind base;
@tailwind components;
@tailwind utilities;
@import url('https://fonts.googleapis.com/css2?family=Paytone+One&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Work+Sans:wght@100;300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700&family=Roboto:wght@100;300;400;500&display=swap');
:root {
  --max-width: 1100px;
  --border-radius: 12px;
  --font-mono: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono',
    'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro',
    'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;

  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  --primary-glow: conic-gradient(
    from 180deg at 50% 50%,
    #16abff33 0deg,
    #0885ff33 55deg,
    #54d6ff33 120deg,
    #0071ff33 160deg,
    transparent 360deg
  );
  --secondary-glow: radial-gradient(
    rgba(255, 255, 255, 1),
    rgba(255, 255, 255, 0)
  );

  --tile-start-rgb: 239, 245, 249;
  --tile-end-rgb: 228, 232, 233;
  --tile-border: conic-gradient(
    #00000080,
    #00000040,
    #00000030,
    #00000020,
    #00000010,
    #00000010,
    #00000080
  );

  --callout-rgb: 238, 240, 241;
  --callout-border-rgb: 172, 175, 176;
  --card-rgb: 180, 185, 188;
  --card-border-rgb: 131, 134, 135;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;

    --primary-glow: radial-gradient(rgba(1, 65, 255, 0.4), rgba(1, 65, 255, 0));
    --secondary-glow: linear-gradient(
      to bottom right,
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0),
      rgba(1, 65, 255, 0.3)
    );

    --tile-start-rgb: 2, 13, 46;
    --tile-end-rgb: 2, 5, 19;
    --tile-border: conic-gradient(
      #ffffff80,
      #ffffff40,
      #ffffff30,
      #ffffff20,
      #ffffff10,
      #ffffff10,
      #ffffff80
    );

    --callout-rgb: 20, 20, 20;
    --callout-border-rgb: 108, 108, 108;
    --card-rgb: 100, 100, 100;
    --card-border-rgb: 200, 200, 200;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  background-color: white;
}

a {
  color: inherit;
  text-decoration: none;
}
/* 
@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
} */

.bg_shade {
  background-image: url("../public/assets/bg-image.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.bg_shade::before{
  background-image: linear-gradient(to bottom, black, black);
}

/* faq */
.container-faq {
  width: 90vw;
  max-width: 700px;
  display: grid;
}

.main-faq {
  /* using flex because of better browser support */
  display: flex;
  justify-content: flex-end;
  align-items: flex-end;
}
.container > h3 {
  line-height: 1.2;
  font-weight: 500;
}

.question-title {
  padding: 1rem 1.5rem;
}
.text-info {
  padding: 2rem 1.5rem;
}
.question {
  position: sticky;
  margin-bottom: 2rem;
  border-radius: 5rem;
  background: #eaf0ff;
  border-radius: 0.25rem;
  border: 1px solid #def1ff;
}
.question > h4 {
  text-transform: none;
  line-height: 1.5;
}
.question > p {
  color: hsl(0, 0%, 0%);
  padding-bottom: 0;
  padding-top: 0.5rem;
  background-color: white;
}
.question > header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.question > header > h4 {
  margin-bottom: 0;
}
.btn-zzz {
  background: transparent;
  border-color: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  color: black;
  cursor: pointer;
  margin-left: 1rem;
  align-self: center;
  min-width: 2rem;
}

.question-title {
  cursor: pointer;
}
.moving {
  animation: move-rt1 20000ms linear infinite;
}

.moving-1{
  animation: move-rt1 200000ms linear infinite;
}

@keyframes move-rt1 {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-170%);
  }
}
